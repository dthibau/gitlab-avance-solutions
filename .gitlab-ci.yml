# This file is a template, and might need editing before it works on your project.
---
# Build JAVA applications using Apache Maven (http://maven.apache.org)
# For docker image tags see https://hub.docker.com/_/maven/
#
# For general lifecycle information see https://maven.apache.org/guides/introduction/introduction-to-the-lifecycle.html
#
# This template will build and test your projects as well as create the documentation.
#
# * Caches downloaded dependencies and plugins between invocation.
# * Verify but don't deploy merge requests.
# * Deploy built artifacts from master branch only.
# * Shows how to use multiple jobs in test stage for verifying functionality
#   with multiple JDKs.
# * Uses site:stage to collect the documentation for multi-module projects.
# * Publishes the documentation for `master` branch.

image: openjdk:21-jdk-oracle
default:
  tags:
    - docker
variables:
  # This will suppress any download for dependencies and plugins or upload messages which would clutter the console log.
  # `showDateTime` will show the passed time in milliseconds. You need to specify `--batch-mode` to make this work.
  MAVEN_OPTS: "-Dhttps.protocols=TLSv1.2 -Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN -Dorg.slf4j.simpleLogger.showDateTime=true -Djava.awt.headless=true"
  APP_JAR: "delivery-service-0.0.1-SNAPSHOT.jar"
# Cache downloaded dependencies and plugins between builds.
# To keep cache across branches add 'key: "$CI_JOB_NAME"'
cache:
  paths:
    - .m2/repository
workflow:
  auto_cancel:
    on_new_commit: interruptible

stages:
  - package
  - test
  - deploy-integration

package:
  stage: package
  interruptible: true
  script:
    - echo "Tests unitaire et packaging"
    - ./mvnw $MAVEN_OPTS clean package
  artifacts:
    paths:
      - target/*.jar

jacoco:
  stage: test
  interruptible: true
  script:
    - echo "Computing coverage report"
    - ./mvnw test
    - cp -r target/site/jacoco/ coverage/
  dependencies: []
  artifacts:
    paths:
      - coverage/
    expose_as: 'Rapport Jacocco'
    reports:
      junit:
        - target/surefire-reports/*.xml

integration-test:
  stage: test
  interruptible: true
  variables:
      GIT_STRATEGY: none
  dependencies:
    - package
  script:
    - echo "Starting Spring Boot application..."
    - nohup java -jar target/$APP_JAR &
    - APP_PID=$!
    # Attendre que l'application soit démarrée (par exemple en vérifiant une URL)
    - until curl -s http://localhost:8080/actuator/health | grep "UP"; do sleep 5; done
    # Testing some URLS les tests JMeter
    - echo "Testing some URLs ..."
    - |
      if ! curl --fail -s http://localhost:8080/api/livraison; then
        echo "First request failed: API request failed"
        kill $APP_PID
        exit 1
      fi
    # Arrêter l'application
    - echo "Stopping Spring Boot application..."
    - kill $APP_PID

deploy-integration:
  stage: deploy-integration
  interruptible: true
  rules:
    - if: $CI_COMMIT_REF_PROTECTED && $CI_MERGE_REQUEST_APPROVED
  variables:
    GIT_STRATEGY: none
  tags:
    - shell
  script:
    - ls target/
    - cp target/*.jar .
    - echo "Restarting service"
  dependencies:
    - package


